set.seed(1234)
clusters_try <- kmeans(casespercapita_ro[,3:7], 4)
table(clusters_try$cluster)
rownames(casespercapita_ro) <- casespercapita_ro$County
fviz_cluster(clusters_try, data = casespercapita_ro[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
set.seed(1234)
clusters_try <- kmeans(casespercapita_ro[,3:7], 2)
table(clusters_try$cluster)
rownames(casespercapita_ro) <- casespercapita_ro$County
fviz_cluster(clusters_try, data = casespercapita_ro[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
clusters_try$cluster
clusters_try$cluster==2
clusters_try$cluster==1
clusters[clusters_try$cluster==1]
clusters_try[clusters_try$cluster==1]
clusters_try$cluster[clusters_try$cluster==1]
set.seed(1234)
clusters_try <- kmeans(casespercapita_ro[,3:7], 2)
table(clusters_try$cluster)
rownames(casespercapita_ro) <- casespercapita_ro$County
fviz_cluster(clusters_try, data = casespercapita_ro[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
casespercapita_ro$two <- clusters_try$cluster
c2 <- data.frame(select(casespercapita_ro, County, two))
getwd()
write.csv(c2, "c2.csv")
casespercapita_ro2 <- casespercapita_ro2 %>%
filter(!County %in% c("Armstrong", "Borden", "Childress",
"Crockett", "Culberson", "Donley",
"Glasscock", "Hudspeth", "Irion",
"Kimble", "King", "Kinney", "La Salle",
"Menard", "Oldham", "Reagan", "Roberts",
"Sterling", "Sutton", "Terrell"))
casespercapita_ro2 <- casespercapita[1:7]
casespercapita_ro2 <- casespercapita_ro2 %>%
filter(!County %in% c("Armstrong", "Borden", "Childress",
"Crockett", "Culberson", "Donley",
"Glasscock", "Hudspeth", "Irion",
"Kimble", "King", "Kinney", "La Salle",
"Menard", "Oldham", "Reagan", "Roberts",
"Sterling", "Sutton", "Terrell"))
#optimal number of clusters
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "silhouette")+labs(subtitle = "Silhouette method")
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "wss")+labs(subtitle="Elbow method")
nb <- NbClust(casespercapita_ro2[3:7], distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
fviz_nbclust(nb) + theme_minimal()
set.seed(1234)
clusters_try <- kmeans(casespercapita_ro2[,3:7], 2)
table(clusters_try$cluster)
rownames(casespercapita_ro) <- casespercapita_ro$County
fviz_cluster(clusters_try, data = casespercapita_ro[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
rownames(casespercapita_ro) <- casespercapita_ro$County
fviz_cluster(clusters_try, data = casespercapita_ro2[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
rownames(casespercapita_ro2) <- casespercapita_ro2$County
fviz_cluster(clusters_try, data = casespercapita_ro2[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
casespercapita_ro2 <- casespercapita[1:7]
casespercapita_ro2 <- casespercapita_ro2 %>%
filter(!County %in% c("Armstrong", "Borden", "Childress",
"Crockett", "Culberson", "Donley",
"Glasscock", "Hudspeth", "Irion",
"Kimble", "King", "Kinney", "La Salle",
"Menard", "Oldham", "Reagan", "Roberts",
"Sterling", "Sutton", "Terrell",
"Loving", "McMullen", "Kenedy"))
#optimal number of clusters
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "silhouette")+labs(subtitle = "Silhouette method")
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "wss")+labs(subtitle="Elbow method")
nb <- NbClust(casespercapita_ro2[3:7], distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
fviz_nbclust(nb) + theme_minimal()
#optimal number of clusters
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "silhouette")+labs(subtitle = "Silhouette method")
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "wss")+labs(subtitle="Elbow method")
nb <- NbClust(casespercapita_ro2[3:7], distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
table(clusters_try$cluster)
set.seed(1234)
clusters_try <- kmeans(casespercapita_ro2[,3:7], 3)
table(clusters_try$cluster)
table(clusters_try$cluster)
set.seed(1234)
clusters_try <- kmeans(casespercapita_ro2[,3:7], 3)
table(clusters_try$cluster)
rownames(casespercapita_ro2) <- casespercapita_ro2$County
fviz_cluster(clusters_try, data = casespercapita_ro2[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
#optimal number of clusters
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "silhouette")+labs(subtitle = "Silhouette method")
fviz_nbclust(casespercapita_ro2[3:7], kmeans, method = "wss")+labs(subtitle="Elbow method")
nb <- NbClust(casespercapita_ro2[3:7], distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
fviz_nbclust(nb) + theme_minimal()
set.seed(1234)
clusters_try <- kmeans(casespercapita_ro2[,3:7], 4)
table(clusters_try$cluster)
rownames(casespercapita_ro2) <- casespercapita_ro2$County
fviz_cluster(clusters_try, data = casespercapita_ro2[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
casespercapita_ro2$four <- clusters_try$cluster
c4 <- data.frame(select(casespercapita_ro2, County, four))
write.csv(c4, "c4.csv")
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(rgdal, quietly = T))
suppressPackageStartupMessages(library(sp, quietly = T))
suppressPackageStartupMessages(library(rgeos, quietly = T))
suppressPackageStartupMessages(library(raster, quietly = T))
suppressPackageStartupMessages(library(GISTools, quietly = T))
suppressPackageStartupMessages(library(geosphere, quietly = T))
suppressPackageStartupMessages(library(ClustGeo, quietly = T))
suppressPackageStartupMessages(library(cluster, quietly = T))
suppressPackageStartupMessages(library(tidyverse, quietly = T))
suppressPackageStartupMessages(library(factoextra, quietly = T))
suppressPackageStartupMessages(library(spdep, quietly = T))
suppressPackageStartupMessages(library(NbClust, quietly = T))
#read in data
cases <- read.csv("file:///C:/Users/volpem/Desktop/Caseloads/DisposedCases.csv")
#check that all are numeric
sapply(cases,str)
#check for na
sum(sapply(cases, is.na))
#remove S_Disposed_Felony and S_Disposed_Misd
cases <- cases[,c(1:4,7:9)]
#make cases disposed per capita
casespercapita  <- cases %>%
mutate(District_Disposed = District_Disposed/Population,
C_Disposed = C_Disposed/Population,
S_Disposed_Misd.Fel = S_Disposed_Misd.Fel/Population,
Justice_Disposed = Justice_Disposed/Population,
Municipal_Disposed = Municipal_Disposed/Population)
#check sd
sapply(casespercapita[3:7], sd)
#optimal number of clusters
fviz_nbclust(casespercapita[3:7], kmeans, method = "silhouette")+labs(subtitle = "Silhouette method")
fviz_nbclust(casespercapita[3:7], kmeans, method = "wss")+labs(subtitle="Elbow method")
nb <- NbClust(casespercapita[3:7], distance = "euclidean", min.nc = 2,
max.nc = 10, method = "kmeans")
fviz_nbclust(nb) + theme_minimal()
set.seed(1234)
clusters_three <- kmeans(casespercapita[,3:7], 3)
table(clusters_three$cluster)
casespercapita$three <- clusters_three$cluster
aggregate(data = casespercapita, .~three, mean)
rownames(casespercapita) <- casespercapita$County
fviz_cluster(clusters_three, data = casespercapita[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
set.seed(1234)
clusters_three <- kmeans(casespercapita[,3:7], 2)
table(clusters_three$cluster)
casespercapita$three <- clusters_three$cluster
aggregate(data = casespercapita, .~three, mean)
rownames(casespercapita) <- casespercapita$County
fviz_cluster(clusters_three, data = casespercapita[3:7],pointsize =2,labelsize=6,ellipse=TRUE)+
theme_minimal()
rm(list=ls())
library(tidyverse)
library(rvest)
library(XML)
#create urls
urls <- paste("http://tidc.tamu.edu/Public.Net/Reports/DataSheet.aspx?cid=",1:254,sep="")
urls[[1]] %>% read_html() %>% html_node(xpath = '//*[@id="ctl00_MainContent_CallbackPanel_rpReport_RPHT"]') %>% html_text()
library(tidyverse)
library(rvest)
library(XML)
#create urls
urls <- paste("http://tidc.tamu.edu/Public.Net/Reports/DataSheet.aspx?cid=",1:254,sep="")
# TX Counties - scrape county names
CountySheets <- list(NA)
for(i in 1:len(urls)){
CountySheets[[i]]  <- urls[i] %>%
read_html()%>%
html_node(xpath = '//*[@id="ctl00_MainContent_CallbackPanel_rpReport_RPHT"]') %>%
html_text()
}
library(tidyverse)
library(rvest)
library(XML)
#create urls
urls <- paste("http://tidc.tamu.edu/Public.Net/Reports/DataSheet.aspx?cid=",1:254,sep="")
# TX Counties - scrape county names
CountySheets <- list(NA)
for(i in 1:length(urls)){
CountySheets[[i]]  <- urls[i] %>%
read_html()%>%
html_node(xpath = '//*[@id="ctl00_MainContent_CallbackPanel_rpReport_RPHT"]') %>%
html_text()
}
CountySheets[[1]]
CountySheetsNames <- unlist(CountySheets)
CountyTables <- list(NA)
names(CountyTables) <- CountySheetsNames
CountyTables <- list(rep(NA, length(CountySheetsNames))
CountySheets[[1]]
CountyTables <- list(rep(NA, length(CountySheetsNames)))
View(CountySheets)
View(CountyTables)
?vector
CountyTables <- vector("list", length = length(CountySheets))
names(CountyTables) <- CountySheetsNames
View(CountyTables)
urls[1] %>%
read_html()%>%
html_node(xpath = '//*[@id="ctl00_MainContent_CallbackPanel_rpReport_RPC"]') %>%
html_table()
urls[1] %>%
read_html()%>%
html_node(xpath = '//*[@id="ctl00_MainContent_CallbackPanel_rpReport"]/tbody/tr/td/table') %>%
html_table()
urls[1] %>%
read_html()%>%
html_node(css = '#ctl00_MainContent_CallbackPanel_rpReport_gvReport_DXMainTable td')%>%
html_table()
urls[1] %>%
read_html()%>%
html_node(xpath = '//*[(@id = "ctl00_MainContent_CallbackPanel_rpReport_gvReport_DXMaiTable")]//td') %>%
html_table()
urls[i] %>%
read_html()%>%
html_node(xpath = '//*[(@id = "ctl00_MainContent_CallbackPanel_rpReport_gvReport_DXMainTable")]//td') %>%
html_table()
urls[i] %>%
read_html()%>%
html_node(xpath = '//*[(@id = "ctl00_MainContent_CallbackPanel_rpReport_gvReport_DXMainTable")]//td') %>%
html_text()
rm(list=ls())
library(tabulizer)
library(plyr)
library(tidyverse)
library(data.table)
## directory
base <- "H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs"
setwd(base)
pdfs <- list.files(base)
locate_areas("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf")
locate_areas("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf")
locate_areas("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf")
str(extract_tables("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf",area = list(c(84, 352, 750, 470)) , guess = F, output = "data.frame"))
v <- str(extract_tables("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf",area = list(c(84, 352, 750, 470)) , guess = F, output = "data.frame"))
v <- extract_tables("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf",area = list(c(84, 352, 750, 470)) , guess = F, output = "data.frame")
v[[1]]
v <- extract_tables("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf",area = list(c(84, 352, 750, 470)) , guess = F, output = "data.frame", method = "lattice")
v[[1]]
v[[2]]
v <- extract_tables("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs/1-1-18.pdf",area = list(c(84, 352, 750, 470)) , guess = F, output = "data.frame", method = "stream")
v[[1]]
rm(v)
rm(list=ls())
#### Obtaining All Warrant Comments/ Charges ####
library(tabulizer)
library(plyr)
library(tidyverse)
library(data.table)
## directory
base <- "H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts/bookings_pdfs"
setwd(base)
## obtain pdfs from directory
pdfs <- list.files(base)
## read pdfs and extract charges
charges <- list(NA)
for(i in 1:length(pdfs)){
charges[[i]] <- extract_tables(pdfs[i], area = list(c(84, 352, 750, 470)),
guess = F, output = "data.frame")
}
View(charges)
charges[[1]]
View(charges)
## Convert lists of characters within the main list to one dataframe per entry
charges2 <- list(NA)
charges2 <- list(NA)
for(i in 1:length(charges)){
charges2[[i]] <- ldply (pdf_tables[[i]], data.frame)
}
for(i in 1:length(charges)){
charges2[[i]] <- ldply (charges[[i]], data.frame)
}
View(charges2)
## convert list of dataframes to one df
charges_final <- do.call(rbind.data.frame,charges2)
charges[[147]]
charges2[[147]]
charges2[[147]][2]
head(charges2[[147]][2])
charges2[[147]] <- charges2[[147]][-2]
str(charges2[[147]])
## convert list of dataframes to one df
charges_final <- do.call(rbind.data.frame,charges2)
ncol(charges2[[147]])
lapply(charges2,ncol)
v <- lapply(charges2,ncol)
v[v==2]
View(v)
charges2[[46]]
charges2[[46]] <- charges2[[46]][-2]
charges2[[58]] <- charges2[[58]][-2]
charges2[[99]] <- charges2[[99]][-2]
charges2[[213]] <- charges2[[213]][-2]
View(charges2)
## convert list of dataframes to one df
charges_final <- do.call(rbind.data.frame,charges2)
v <- lapply(charges2,ncol)
v[v==2]
View(v)
charges2[[171]] <- charges2[[171]][-2]
## convert list of dataframes to one df
charges_final <- do.call(rbind.data.frame,charges2)
View(charges_final)
getwd()
setwd("H:/Public/Justice Program/Reports and Pubs/Crim/Arnold Foundation Fees and Fines (Phase II)/Data/Cost Data/Florida/Leon_County/JailCosts")
write.csv(charges_final, "Charges.csv")
rm(list=ls())
getwd()
library(plyr)
library(tidyverse)
data <- read_csv("bookings_clean.csv")
View(data)
# create ID variable
data$uid <- paste(data$FULL.NAME, data$LAST.BOOKING.DATE,sep = ",")
View(data)
names(Data)
names(data)
# create ID variable
data$uid <- paste(data$Full.Name, data$Last.Booking.Date,sep = ",")
unique(data$uid)
length(unique(data$uid))
# create ID variable
data$uid <- paste(data$Full.Name, data$Last.Booking.Date,data$Booking.Type,sep = ",")
data$uid
length(unique(data$uid))
#### Analysis ####
library(plyr)
library(tidyverse)
data <- read_csv("bookings_clean.csv")
# create ID variable
data$uid <- paste(data$Full.Name, data$Last.Booking.Date,data$Booking.Type,sep = ",")
# string split columns by comma into new rows
data_analysis <- data %>%
select(FULL.NAME, LAST.BOOKING.DATE, LAST.RELEASE.DATE, BOOKING.TYPE, IN.JAIL., counts,
agency, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
names(Data)
names(data)
# string split columns by comma into new rows
data_analysis <- data %>%
select(Full.Name, Last.Booking.Date, Last.Release.Date, Booking.Ty[e], In.Jail, counts,
agency, charges, uid, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
# string split columns by comma into new rows
data_analysis <- data %>%
select(Full.Name, Last.Booking.Date, Last.Release.Date, Booking.Ty[e], In.Jail, counts,
agency, Charges, uid, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
# string split columns by comma into new rows
data_analysis <- data %>%
select(Full.Name, Last.Booking.Date, Last.Release.Date, Booking.Type, In.Jail, counts,
agency, Charges, uid, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
View(data_analysis)
# string split columns by comma into new rows
data_analysis <- data %>%
select(Full.Name, Last.Booking.Date, Last.Release.Date, Booking.Type, In.Jail, counts,
agency, Charges, uid, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
View(data_analysis)
rm(list=ls())
#### Analysis ####
library(plyr)
library(tidyverse)
data <- read_csv("bookings_clean.csv")
names(data)
# create ID variable
data$uid <- 1:nrow(data)
data_analysis <- data %>%
select(Full.Name, Last.Booking.Date, Last.Release.Date, Booking.Type, In.Jail, counts,
agency, Charges, uid, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
View(data)
View(data_analysis)
grepl("Lic", data_analysis$all_charges[9])
View(data_analysis)
View(data_analysis)
?grepl
?grepl
#### Analysis ####
library(plyr)
library(tidyverse)
data <- read_csv("bookings_clean.csv")
# create ID variable
data$uid <- 1:nrow(data)
data_analysis <- data %>%
select(Full.Name, Last.Booking.Date, Last.Release.Date, Booking.Type, In.Jail, counts,
agency, Charges, uid, charges_clean) %>%
mutate(all_charges = strsplit(as.character(charges_clean), ",")) %>%
unnest(all_charges)
?grepl
View(data_analysis)
grepl("LIC", data_analysis$charges_clean[9])
data_analysis %>%
filter(grepl("LIC", charges_clean))
data_analysis %>%
filter(grepl("LIC", charges_clean)) %>%
select(uid) %>%
data_analysis %>%
filter(grepl("LIC", charges_clean)) %>%
select(uid)
data_analysis %>%
filter(grepl("LIC", charges_clean)) %>%
select(uid) %>%
distinct()
LIC_ids <- data_analysis %>%
filter(grepl("LIC", charges_clean)) %>%
select(uid) %>%
distinct()
data_analysis %>%
filter(uid %in% LIC_ids)
data_analysis %>%
filter(uid %in% LIC_ids$uid)
LIC_Data <- data_analysis %>%
filter(uid %in% LIC_ids$uid)
View(LIC_Data)
DWLS_ids <- data_analysis %>%
fitler(grepl("DWLS", charges_clean)) %>%
select(uid) %>%
distinct()
DWLS_ids <- data_analysis %>%
filter(grepl("DWLS", charges_clean)) %>%
select(uid) %>%
distinct()
DWLS_Data <- data_analysis %>%
filter(uid %in% DWLS_ids$uid)
View(DWLS_Data)
View(data)
range(data$uid)
range(data_analysis$uid)
range(DWLS$uid)
range(DWLS_Data$uid)
range(LIC_Data$uid)
View(LIC_Data)
str(LIC_Data$uid)
# Go through LIC_Data and weed out not really driving with license suspended people
LIC_Data_Clean <- LIC_Data %>%
filter(!uid %in% c(23,51,55,90,168,214,262,284,304,355,377,405,
475,512,513,526,545,555,559,573,592,597,602,
699, 763, 777, 783, 819, 863, 935, 984, 1023,
1025, 1111, 1124, 1140, 1141, 1143, 1178, 1205,
1281,1298, 1301, 1324, 1361, 1367, 1377, 1386,
1418, 1457, 1461, 1476, 1513, 1526, 1533, 1546, 1559,
1567, 1572, 1575, 1599, 1633, 1645, 1660, 1692, 1693,
1698, 1728, 1730, 1766, 1788, 1822, 1845, 1851, 1869,
1870, 1886, 1923, 1956, 1957, 1961, 1969, 1970, 1984,
1999, 2061, 2076, 2108, 2151, 2180, 2225, 2274, 2327,
2331, 2332, 2380, 2392, 2442, 2448, 2455, 2460, 2470,
2495, 2507, 2513, 2578, 2586, 2629, 2776, 2800, 2809,
2851, 2886, 2900, 2909, 2928, 2937, 2941, 3004, 3029,
3041, 3043))
# Go through LIC_Data and weed out not really driving with license suspended people
LIC_Data_Clean <- LIC_Data %>%
filter(!uid %in% c(23,51,55,90,168,214,262,284,304,355,377,405,
475,512,513,526,545,555,559,573,592,597,602,
699, 763, 777, 783, 819, 863, 935, 984, 1023,
1025, 1111, 1124, 1140, 1141, 1143, 1178, 1205,
1281,1298, 1301, 1324, 1361, 1367, 1377, 1386,
1418, 1457, 1461, 1476, 1513, 1526, 1533, 1546, 1559,
1567, 1572, 1575, 1599, 1633, 1645, 1660, 1692, 1693,
1698, 1728, 1730, 1766, 1788, 1822, 1845, 1851, 1869,
1870, 1886, 1923, 1956, 1957, 1961, 1969, 1970, 1984,
1999, 2061, 2076, 2108, 2151, 2180, 2225, 2274, 2327,
2331, 2332, 2380, 2392, 2442, 2448, 2455, 2460, 2470,
2495, 2507, 2513, 2578, 2586, 2629, 2776, 2800, 2809,
2851, 2886, 2900, 2909, 2928, 2937, 2941, 3004, 3029,
3041, 3043, 3071, 9870, 9832, 9776, 9733, 9720, 9712,
9652, 9614, 9588, 9578, 9559, 9554, 9530, 9527, 9507,
9492, 9466, 9454, 9436, 9430, 9420, 9379, 9353, 9345,
9338, 9326, 9310, 9281, 9267, 9243, 9146, 9141, 9138,
9131, 9130, 9125, 9111, 9105, 9085, 9075, 9062, 9000,
8997, 8991, 8930, 8905, 8900, 8796, 8760, 8749, 8731,
8711, 8645, 8586, 8568, 8549, 8556, 8509, 8472, 8470,
8425, 8402, 8391, 8382))
data_analysis %>%
filter(grepl("(?=LIC)(?=DRIV)", charges_clean))
?grepl
str_detect("(?=LIC)(?=DRIV)",data_analysis$charges_clean[1])
str_detect("(?=LIC)(?=DRIV)",data_analysis$charges_clean[41])
grepl("(?=LIC)(?=DRIV)",data_analysis$charges_clean[1], perl = T)
grepl("(?=LIC)(?=DRIV)",data_analysis$charges_clean[49], perl = T)
grepl("(?=LIC)(?=DRIV)",data_analysis$charges_clean[41], perl = T)
grepl("(?=.*LIC)(?=.*DRIV)",data_analysis$charges_clean[41], perl = T)
data_analysis %>%
filter(grepl("(?=.*LIC)(?=.*DRIV)", charges_clean, perl = T))
data_analysis %>%
filter(grepl("(?=.*LIC)(?=.*DRIV)", charges_clean, perl = T))
LIC_ids_2 <- data_analysis %>%
filter(grepl("(?=.*LIC)(?=.*DRIV)", charges_clean, perl = T)) %>%
select(uid) %>%
distinct()
LIC_Data_2 <- data_analysis %>%
filter(uid %in% LIC_ids$uid)
View(LIC_Data_2)
LIC_Data_2 <- data_analysis %>%
filter(uid %in% LIC_ids_2$uid)
View(LIC_Data_2)
